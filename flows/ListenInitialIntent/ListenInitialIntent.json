{
  "name": "21753b24-5912-4958-b47e-b08eb87636bb",
  "displayName": "ListenInitialIntent",
  "transitionRoutes": [ {
    "condition": "$session.params.comingfromstate = \"AdditionalQuestion\" AND $session.params.channel = \"voice\"",
    "triggerFulfillment": {
      "setParameterActions": [ {
        "parameter": "callerintent",
        "value": null
      }, {
        "parameter": "AnythingElse",
        "value": null
      }, {
        "parameter": "Metrics_ListenInitialIntent_StartPage_1",
        "value": "$sys.func.TO_TEXT($sys.func.NOW())"
      }, {
        "parameter": "FAQ_Playbook",
        "value": "Entry"
      } ]
    },
    "name": "291e7531-60a6-43c0-b6df-4d6257dda346",
    "targetPlaybook": "FAQ Voice Playbook"
  }, {
    "condition": "$session.params.comingfromstate = \"AdditionalQuestion\"",
    "triggerFulfillment": {
      "setParameterActions": [ {
        "parameter": "callerintent",
        "value": null
      }, {
        "parameter": "AnythingElse",
        "value": null
      }, {
        "parameter": "Metrics_ListenInitialIntent_StartPage_2",
        "value": "$sys.func.TO_TEXT($sys.func.NOW())"
      } ]
    },
    "targetPage": "CheckChannel",
    "name": "066151c3-40e3-4e94-83e5-573302b22a75"
  }, {
    "condition": "$session.params.comingfromstate = \"Authentication\"",
    "triggerFulfillment": {
      "setParameterActions": [ {
        "parameter": "Metrics_ListenInitialIntent_StartPage_3",
        "value": "$sys.func.TO_TEXT($sys.func.NOW())"
      } ]
    },
    "targetPage": "RerouteViaAuthentication",
    "name": "b3fc2556-d205-4598-b5b0-a907e99748af"
  }, {
    "condition": "$session.params.comingfromstate = \"playbook\"",
    "triggerFulfillment": {
      "setParameterActions": [ {
        "parameter": "IntentCounter",
        "value": 0
      }, {
        "parameter": "Metrics_ListenInitialIntent_StartPage_4",
        "value": "$sys.func.TO_TEXT($sys.func.NOW())"
      } ]
    },
    "targetPage": "check_channel_PB",
    "name": "302fb570-074a-44e8-85c7-3ab7b6a3a599"
  }, {
    "condition": "$session.params.Anythingelse != null",
    "triggerFulfillment": {
      "setParameterActions": [ {
        "parameter": "Metrics_ListenInitialIntent_StartPage_5",
        "value": "$sys.func.TO_TEXT($sys.func.NOW())"
      } ]
    },
    "targetPage": "CheckChannel",
    "name": "9831c176-84ec-4609-9dc2-5dd89e613705"
  }, {
    "condition": "TRUE",
    "triggerFulfillment": {
      "setParameterActions": [ {
        "parameter": "Metrics_ListenInitialIntent_StartPage_Default",
        "value": "$sys.func.TO_TEXT($sys.func.NOW())"
      } ],
      "advancedSettings": {
        "playbackInterruptionSettings": {
        
        },
        "dtmfSettings": {
          "useSystemEntityRule": false
        }
      },
      "nextActionOverride": {
      
      }
    },
    "targetPage": "CheckChannel",
    "name": "969a0c77-484d-4d94-bfe9-25bd05295d84"
  } ],
  "eventHandlers": [ {
    "event": "sys.no-match-default",
    "triggerFulfillment": {
      "messages": [ {
        "text": {
          "text": [ "I didn't get that. Can you say it again?", "I missed what you said. What was that?", "Sorry, could you say that again?", "Sorry, can you say that again?", "Can you say that again?", "Sorry, I didn't get that. Can you rephrase?", "Sorry, what was that?", "One more time?", "What was that?", "Say that one more time?", "I didn't get that. Can you repeat?", "I missed that, say that again?" ]
        },
        "languageCode": "en"
      } ]
    },
    "name": "c11d6809-ba57-4db7-830e-8b8edc33ebdf"
  }, {
    "event": "sys.no-input-default",
    "triggerFulfillment": {
      "messages": [ {
        "text": {
          "text": [ "I didn't get that. Can you say it again?", "I missed what you said. What was that?", "Sorry, could you say that again?", "Sorry, can you say that again?", "Can you say that again?", "Sorry, I didn't get that. Can you rephrase?", "Sorry, what was that?", "One more time?", "What was that?", "Say that one more time?", "I didn't get that. Can you repeat?", "I missed that, say that again?" ]
        },
        "languageCode": "en"
      } ]
    },
    "name": "144f6d45-3168-418b-a9fc-55b8acea5347"
  } ],
  "nluSettings": {
    "modelType": "MODEL_TYPE_STANDARD",
    "classificationThreshold": 0.60000002,
    "modelTrainingMode": "MODEL_TRAINING_MODE_AUTOMATIC",
    "multiIntentSettings": {
    
    }
  },
  "advancedSettings": {
    "enabled": true
  },
  "nluSettingsList": [ {
    "modelType": "MODEL_TYPE_STANDARD",
    "classificationThreshold": 0.60000002,
    "modelTrainingMode": "MODEL_TRAINING_MODE_AUTOMATIC",
    "multiIntentSettings": {
    
    },
    "languageCode": "en"
  } ],
  "inputParameterDefinitions": [ {
    "name": "comingfromstate",
    "description": "this parameter defines that playbook is handing over to flow",
    "typeSchema": {
      "inlineSchema": {
        "type": "STRING"
      }
    },
    "parameterType": {
      "name": "comingfromstate",
      "openapiJsonSchema": {
        "type": "string"
      }
    }
  }, {
    "name": "user_query",
    "description": "user question passing from playbook to flow",
    "typeSchema": {
      "inlineSchema": {
        "type": "STRING"
      }
    },
    "parameterType": {
      "name": "user_query",
      "openapiJsonSchema": {
        "type": "string"
      }
    }
  }, {
    "name": "callerintent",
    "description": "Intent basis of Customer input",
    "typeSchema": {
      "inlineSchema": {
        "type": "STRING"
      }
    },
    "parameterType": {
      "name": "callerintent",
      "openapiJsonSchema": {
        "type": "string"
      }
    }
  }, {
    "name": "ToModule",
    "description": "NA",
    "typeSchema": {
      "inlineSchema": {
        "type": "STRING"
      }
    },
    "parameterType": {
      "name": "ToModule",
      "openapiJsonSchema": {
        "type": "string"
      }
    }
  }, {
    "name": "ToState",
    "description": "Type of intent captured from playbook to pass to the flow",
    "typeSchema": {
      "inlineSchema": {
        "type": "STRING"
      }
    },
    "parameterType": {
      "name": "ToState",
      "openapiJsonSchema": {
        "type": "string"
      }
    }
  }, {
    "name": "CurrentInvoice",
    "description": "customer's current invoice",
    "typeSchema": {
      "inlineSchema": {
        "type": "STRING"
      }
    },
    "parameterType": {
      "name": "CurrentInvoice",
      "openapiJsonSchema": {
        "type": "string"
      }
    }
  }, {
    "name": "PreviousInvoice",
    "description": "Customer's previous invoice",
    "typeSchema": {
      "inlineSchema": {
        "type": "STRING"
      }
    },
    "parameterType": {
      "name": "PreviousInvoice",
      "openapiJsonSchema": {
        "type": "string"
      }
    }
  }, {
    "name": "FAQSuccess",
    "description": "FAQ Status",
    "typeSchema": {
      "inlineSchema": {
        "type": "STRING"
      }
    },
    "parameterType": {
      "name": "FAQSuccess",
      "openapiJsonSchema": {
        "type": "string"
      }
    }
  }, {
    "name": "AccountNumber",
    "description": "AccountNumber",
    "typeSchema": {
      "inlineSchema": {
        "type": "STRING"
      }
    },
    "parameterType": {
      "name": "AccountNumber",
      "openapiJsonSchema": {
        "type": "string"
      }
    }
  } ],
  "outputParameterDefinitions": [ {
    "name": "user_query",
    "description": "user query output",
    "typeSchema": {
      "inlineSchema": {
        "type": "STRING"
      }
    },
    "parameterType": {
      "name": "user_query",
      "openapiJsonSchema": {
        "type": "string"
      }
    }
  }, {
    "name": "CurrentInvoice",
    "description": "Customer's current invoice",
    "typeSchema": {
      "inlineSchema": {
        "type": "STRING"
      }
    },
    "parameterType": {
      "name": "CurrentInvoice",
      "openapiJsonSchema": {
        "type": "string"
      }
    }
  }, {
    "name": "PreviousInvoice",
    "description": "Customer's previous invoice",
    "typeSchema": {
      "inlineSchema": {
        "type": "STRING"
      }
    },
    "parameterType": {
      "name": "PreviousInvoice",
      "openapiJsonSchema": {
        "type": "string"
      }
    }
  } ]
}
